[package]
name = "asserting"
version = "0.5.0"
authors = ["haraldmaida"]
license = "MIT OR Apache-2.0"
edition = "2021"
rust-version = "1.78.0"
repository = "https://github.com/innoave/asserting"
readme = "README.md"

description = """
Fluent assertions for tests in Rust that are convenient to write and easy to extend.
"""
keywords = ["assertions", "testing", "fluent", "matchers"]
categories = ["development-tools::testing", "no-std"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["std", "colored", "float-cmp", "panic", "regex"]
colored = ["dep:sdiff"]
float-cmp = ["dep:float-cmp"]
panic = ["std"]
regex = ["dep:regex"]
std = []

[dependencies]
hashbrown = "0.15"

# optional
float-cmp = { version = "0.10", optional = true }
regex = { version = "1", optional = true }
sdiff = { version = "0.1", optional = true }

[dev-dependencies]
anyhow = "1"
proptest = "1"
serial_test = "3"
time = { version = "0.3", default-features = false, features = ["macros"] }
version-sync = "0.9"

[lints.rust]
unsafe_code = "forbid"
unstable_features = "forbid"
bare_trait_objects = "warn"
deprecated = "warn"
explicit_outlives_requirements = "warn"
noop_method_call = "warn"
rust_2018_idioms = { level = "warn", priority = -1 }
rust_2021_incompatible_closure_captures = "warn"
rust_2021_incompatible_or_patterns = "warn"
rust_2021_prefixes_incompatible_syntax = "warn"
rust_2021_prelude_collisions = "warn"
single_use_lifetimes = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unused_crate_dependencies = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"
dead_code = "warn"
missing_docs = "warn"  # uncomment when working on docs
variant_size_differences = "warn"  # enable when working on performance

[lints.clippy]
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
enum_glob_use = "deny"
expect_used = "deny"
future_not_send = "allow"
if_not_else = "allow"
missing_const_for_fn = "allow"
must_use_candidate = "allow"
option_if_let_else = "allow"
print_stderr = "deny"
print_stdout = "deny"
unwrap_used = "deny"

[[example]]
name = "colored_diffs"
path = "examples/colored_diffs.rs"
required-features = ["colored"]
